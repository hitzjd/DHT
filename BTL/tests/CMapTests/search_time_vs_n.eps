%!PS-Adobe-2.0 EPSF-2.0
%%Title: search_time_vs_n.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Mar 14 21:23:55 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
658 280 M
63 0 V
6241 0 R
-63 0 V
574 280 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
658 900 M
63 0 V
6241 0 R
-63 0 V
574 900 M
gsave 0 setgray
( 0.02) Rshow
grestore
1.000 UL
LTb
658 1520 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
gsave 0 setgray
( 0.04) Rshow
grestore
1.000 UL
LTb
658 2140 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
gsave 0 setgray
( 0.06) Rshow
grestore
1.000 UL
LTb
658 2760 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
gsave 0 setgray
( 0.08) Rshow
grestore
1.000 UL
LTb
658 3380 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
gsave 0 setgray
( 0.1) Rshow
grestore
1.000 UL
LTb
658 4000 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
gsave 0 setgray
( 0.12) Rshow
grestore
1.000 UL
LTb
658 4620 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
gsave 0 setgray
( 0.14) Rshow
grestore
1.000 UL
LTb
658 280 M
0 63 V
0 4277 R
0 -63 V
658 140 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
1559 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 10000) Cshow
grestore
1.000 UL
LTb
2459 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 20000) Cshow
grestore
1.000 UL
LTb
3360 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 30000) Cshow
grestore
1.000 UL
LTb
4260 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 40000) Cshow
grestore
1.000 UL
LTb
5161 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 50000) Cshow
grestore
1.000 UL
LTb
6061 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 60000) Cshow
grestore
1.000 UL
LTb
6962 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
gsave 0 setgray
( 70000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
658 280 M
6304 0 V
0 4340 V
-6304 0 V
658 280 L
LTb
3810 4830 M
gsave 0 setgray
(search time versus n) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
gsave 0 setgray
("dict_5000_searches_vs_n.txt") Rshow
grestore
LT0
667 2888 Pls
667 2364 Pls
667 2366 Pls
667 2374 Pls
694 2914 Pls
694 2398 Pls
694 2412 Pls
694 2415 Pls
730 2405 Pls
730 2412 Pls
730 2420 Pls
730 2411 Pls
802 2490 Pls
802 2397 Pls
802 2419 Pls
802 2392 Pls
838 2506 Pls
838 2391 Pls
838 2409 Pls
838 2404 Pls
1018 2455 Pls
1018 2528 Pls
1018 2407 Pls
1018 2399 Pls
1378 2406 Pls
1378 2430 Pls
1378 2430 Pls
1378 2440 Pls
2099 2471 Pls
2099 2421 Pls
2099 2412 Pls
2099 2547 Pls
3540 2503 Pls
3540 2448 Pls
3540 2491 Pls
3540 2448 Pls
4981 2464 Pls
4981 2468 Pls
4981 2451 Pls
4981 2482 Pls
6422 2565 Pls
6422 2488 Pls
6422 2535 Pls
6422 2477 Pls
6594 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4347 M
gsave 0 setgray
("cmap_5000_searches_vs_n.txt") Rshow
grestore
LT1
667 3552 Crs
667 2906 Crs
667 2884 Crs
667 2916 Crs
694 2955 Crs
694 2989 Crs
694 3032 Crs
694 2958 Crs
730 2965 Crs
730 2977 Crs
730 3090 Crs
730 3179 Crs
802 3101 Crs
802 3106 Crs
802 3070 Crs
802 3070 Crs
838 3745 Crs
838 3056 Crs
838 3113 Crs
838 2993 Crs
1018 3051 Crs
1018 3016 Crs
1018 3021 Crs
1018 2988 Crs
1378 3076 Crs
1378 3018 Crs
1378 3093 Crs
1378 3069 Crs
2099 3254 Crs
2099 3195 Crs
2099 3248 Crs
2099 3096 Crs
3540 3150 Crs
3540 3254 Crs
3540 3135 Crs
3540 3200 Crs
4981 3221 Crs
4981 3367 Crs
4981 3598 Crs
4981 3153 Crs
6422 3257 Crs
6422 3172 Crs
6422 3167 Crs
6422 3392 Crs
6594 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4207 M
gsave 0 setgray
("cindexedmap_5000_searches_vs_n.txt") Rshow
grestore
LT2
667 3542 Star
667 2946 Star
667 2954 Star
667 2939 Star
694 3564 Star
694 2969 Star
694 2968 Star
694 2954 Star
730 2964 Star
730 2963 Star
730 2984 Star
730 3004 Star
802 3027 Star
802 2968 Star
802 2968 Star
802 3018 Star
838 3093 Star
838 2972 Star
838 2994 Star
838 3097 Star
1018 3065 Star
1018 3069 Star
1018 3035 Star
1018 3114 Star
1378 3054 Star
1378 3083 Star
1378 3361 Star
1378 3124 Star
2099 3141 Star
2099 3143 Star
2099 3083 Star
2099 3144 Star
3540 3185 Star
3540 3184 Star
3540 3346 Star
3540 3149 Star
4981 3246 Star
4981 3189 Star
4981 3282 Star
4981 3208 Star
6422 3213 Star
6422 3241 Star
6422 3191 Star
6422 3232 Star
6594 4207 Star
1.000 UP
1.000 UL
LT3
LTb
6311 4067 M
gsave 0 setgray
("pmap_5000_searches_vs_n.txt") Rshow
grestore
LT3
667 3337 Box
667 2700 Box
667 2740 Box
667 2686 Box
694 2744 Box
694 2710 Box
694 2990 Box
694 2847 Box
730 2731 Box
730 2758 Box
730 2688 Box
730 2720 Box
802 2737 Box
802 2854 Box
802 2912 Box
802 2719 Box
838 2768 Box
838 2735 Box
838 2699 Box
838 2741 Box
1018 2814 Box
1018 2715 Box
1018 2741 Box
1018 2746 Box
1378 2732 Box
1378 4179 Box
1378 2745 Box
1378 2754 Box
2099 2742 Box
2099 2805 Box
2099 2787 Box
2099 2745 Box
3540 2781 Box
3540 2767 Box
3540 2825 Box
3540 2763 Box
4981 2784 Box
4981 2773 Box
4981 2776 Box
4981 2785 Box
6422 2823 Box
6422 2844 Box
6422 2792 Box
6422 2885 Box
6594 4067 Box
1.000 UL
LTb
658 280 M
6304 0 V
0 4340 V
-6304 0 V
658 280 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
